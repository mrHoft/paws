import{R as x,G as r,S as w,C as c,g as P,T as f,a as _,b as T,c as M,B as L,A}from"./main-FgEtuM6s.js";class y{ctx=null;resource=x.get();constructor(t){this.ctx=t}drawShadow=(t,e,s,i=!1)=>{this.ctx&&i&&(this.ctx.fillStyle="rgba(0, 0, 0, 0.25)",this.ctx.beginPath(),this.ctx.ellipse(t,e,s/4,s/10,0,0,2*Math.PI),this.ctx.fill())};drawObject=(t,e,s,i)=>{if(this.ctx){const a=t.width*i/t.height;this.drawShadow(e,r.actionPositionVertical,a),this.ctx.drawImage(t,e-a/2,s-i,a,i)}};drawCat=(t,e,s)=>{this.drawObject(t,e,s,w.cat.height)};drawTrajectory=(t,e,s,i=!0)=>{if(this.ctx){const a=s*(i?.5:1);this.ctx.strokeStyle="rgba(70, 119, 24, 0.5)",this.ctx.beginPath(),this.ctx.ellipse(t+s,e-10,s,a,0,Math.PI,0),this.ctx.lineWidth=4,this.ctx.lineCap="round",this.ctx.stroke(),this.ctx.strokeStyle="rgba(122, 208, 41, 1)",this.ctx.beginPath(),this.ctx.ellipse(t+s,e-10,s,a,0,Math.PI,0),this.ctx.lineWidth=2,this.ctx.stroke(),this.drawShadow(t+s*2,e,w.cat.width,!0)}};drawTarget=(t,e,s,i,a=!1)=>{const h=this.resource.sprite[t];if(h instanceof HTMLImageElement){let o=h.width*i/h.height,u=Math.floor(s-i*.9);t=="puddle"&&(o=Math.floor(o/1.2),i=i/2,u=s-i/2);const m=e-o/2;this.ctx.drawImage(h,m,u,o,i)}else{const o=a?h.image:h.frames[h.frameCount-1].image;this.drawObject(o,e,s+i/8,i/1.5)}}}const E={default:[{src:"mountains.layer1",dx:0,resize:!0,isTop:!0},{src:"mountains.layer2",dx:-.25,resize:!0},{src:"mountains.layer3",dx:-1,resize:!0}],mountains:[{src:"mountains.layer1",dx:0,resize:!0,isTop:!0},{src:"mountains.layer2",dx:-.25,resize:!0},{src:"mountains.layer3",dx:-1,resize:!0}],cliff:[{src:"cliff.layer1",dx:-.1,isTop:!0},{src:"cliff.layer2",dx:-.25},{src:"cliff.layer3",dx:-1}],autumn:[{src:"autumn.layer1",dx:0,isTop:!0},{src:"autumn.layer2",dx:-.25},{src:"autumn.layer3",dx:-1}],desert:[{src:"desert.layer1",dx:0,resize:!0,isTop:!0},{src:"desert.layer2",dx:-.15},{src:"desert.layer3",dx:-1}],lake:[{src:"lake.layer1",dx:0,resize:!0,isTop:!0},{src:"lake.layer2",dx:-.15,resize:!0},{src:"lake.layer3",resize:!0,dx:-1}],jungle:[{src:"jungle.layer1",dx:-.1,resize:!0,isTop:!0},{src:"jungle.layer2",dx:-.5,resize:!0,isTop:!0},{src:"jungle.layer3",dx:-1}],forest:[{src:"forest.layer1",dx:-.15,isTop:!0},{src:"forest.layer2",dx:-.35},{src:"forest.layer3",dx:-1,isTop:!0}]};class l{ctx=null;timer=null;layersArr=[];clearX=c.width;clearY=c.height;static __instance;resource=x.get();constructor({ctx:t}){if(l.__instance)return t&&(l.__instance.ctx=t),l.__instance;l.__instance=this,t&&(l.__instance.ctx=t)}init=t=>{if(this.resource.progress<100){setTimeout(this.init,500);return}this.layersArr=[],E[t].forEach(e=>{const s=P(this.resource.sprite,e.src),i=s.height/s.width,a=e.resize?c.width:s.width,h=a*i,o={img:s,dx:e.dx,width:a,height:h,x:0,y:e.isTop?0:c.height-h};this.layersArr.push(o)})};move=(t=4)=>{this.ctx?.clearRect(0,0,this.clearX,this.clearY),this.layersArr.forEach(e=>{e.x<=-e.width&&(e.x=0),e.x>-e.width&&this.ctx?.drawImage(e.img,e.width-2+e.x,e.y,e.width,e.height),this.ctx?.drawImage(e.img,e.x,e.y,e.width,e.height),e.x+=t*e.dx})};draw=()=>this.move(0);start(t=20){this.stop(),this.timer=setInterval(this.move,t)}stop(){this.timer&&clearInterval(this.timer)}}const v=30,j=-2,b=r.actionPositionVertical-w.cat.height,D=b-v;class C{ctx=null;messages=[];constructor(t){this.ctx=t}render=()=>{if(this.messages.length>0){let t=!1;this.messages.forEach(e=>{const{text:s,color:i,X:a,minY:h}=e;e.Y+=j,e.Y<h&&(t=!0),this.ctx.fillStyle=i,this.ctx.fillText(s,a,e.Y)}),t&&this.messages.shift()}};throw=(t,e,s,i)=>{let a=t.toString(),h="yellow",o=i||D;typeof t=="number"&&(t>0&&(a="+ "+a),h=t<0?"red":"green",o=i||b),e>1&&(a=a+" x"+e),this.messages.push({text:a,color:h,X:s,Y:o,minY:o-v})}}class d{game;prepareJumpStart;prepareJumpEnd;pause;static __instance;constructor({game:t,prepareJumpStart:e,prepareJumpEnd:s,pause:i}){if(this.game=t,this.prepareJumpStart=e,this.prepareJumpEnd=s,this.pause=i,d.__instance)return d.__instance}canJump=()=>!this.game.definingTrajectory&&this.game.action!=="jump";onkeydown=t=>{this.canJump()&&t.code=="Space"&&this.prepareJumpStart()};onkeyup=t=>{this.game.definingTrajectory&&t.code=="Space"&&this.prepareJumpEnd(),t.code=="Escape"&&this.pause(!0)};touchstart=t=>{t.preventDefault(),!(t.target&&t.target instanceof HTMLDivElement&&t.target.ariaLabel)&&this.canJump()&&this.prepareJumpStart()};touchend=()=>{this.game.definingTrajectory&&this.prepareJumpEnd()};registerEvents=()=>{window.addEventListener("keydown",this.onkeydown),window.addEventListener("keyup",this.onkeyup),window.addEventListener("touchstart",this.touchstart),window.addEventListener("touchend",this.touchend),window.addEventListener("mousedown",this.touchstart),window.addEventListener("mouseup",this.touchend)};unRegisterEvents=()=>{window.removeEventListener("keydown",this.onkeydown),window.removeEventListener("keyup",this.onkeyup),window.removeEventListener("touchstart",this.touchstart),window.removeEventListener("touchend",this.touchend),window.removeEventListener("mousedown",this.touchstart),window.removeEventListener("mouseup",this.touchend)}}class g{tooltip={shown:!1,firstTip:!0,firstAnimal:!0,firstBarrier:!0,firstTimeout:!0};setTooltip;static __instance;constructor(t){if(this.setTooltip=t,g.__instance)return g.__instance}set(t){if(!t&&this.tooltip.shown){this.setTooltip(""),this.tooltip.shown=!1,this.tooltip.firstTip=!1;return}typeof t=="string"&&(this.setTooltip(t),this.tooltip.shown=!0)}hide(){this.set()}show=t=>{switch(t){case"start":this.tooltip.firstTip&&(this.tooltip.firstTip=!1,this.set(f.newGame));break;case"barrier":this.tooltip.firstBarrier&&(this.tooltip.firstBarrier=!1,this.set(f.firstBarrier));break;case"timeout":this.tooltip.firstTimeout&&(this.tooltip.firstTimeout=!1,this.set(f.firstTimeout));break;case"animal":this.tooltip.firstAnimal&&(this.tooltip.firstAnimal=!1,this.set(f.firstAnimal))}}}class k{size=0;head=null;tail=null;constructor(){this.size=0,this.head=null,this.tail=null}enqueue(t){const e={value:t,next:null,prev:null};return e.prev=this.tail,this.tail?(this.tail.next=e,this.tail=e):this.head=this.tail=e,++this.size}dequeue(){if(!this.head)return null;const t=this.head,e=this.head?.next;return e?(e.prev=null,this.head=e):this.tail=this.head=null,--this.size,t.value}crop(t){for(;this.size>t;)this.dequeue()}average(t){if(!this.head)return 0;this.crop(t);let e=0,s=0,i=this.head;for(;i;)e+=i.value,++s,i=i.next;return Math.floor(e/s)}peek(){return this.head}isEmpty(){return this.size==0}clear(){this.size=0,this.head=null,this.tail=null}}const H=()=>window.AudioContext||window.webkitAudioContext||null;class X{audioContext=null;oscillators=[];gainNodes=[];_isPlaying=!1;startTime=0;nextScheduleTime=0;SCHEDULE_AHEAD_TIME=.1;baseFrequency;numOscillators;_cycleDuration;oscillatorType;_volume;constructor(t={}){this.baseFrequency=t.baseFrequency??220,this.numOscillators=t.numOscillators??4,this._cycleDuration=Math.max(.1,t.cycleDuration??2),this.oscillatorType=t.oscillatorType??"sine",this._volume=Math.max(0,Math.min(1,t.volume??.3))}async start(){if(this._isPlaying)return;const t=H();if(!t){console.error("Web Audio API not supported");return}try{this.audioContext=new t,this.audioContext.state==="suspended"&&await this.audioContext.resume(),this._isPlaying=!0,this.startTime=this.audioContext.currentTime,this.nextScheduleTime=this.startTime,this.createOscillators(),this.schedule()}catch(e){console.error("Failed to start Shepard Tone:",e),this._isPlaying=!1,this.audioContext&&(await this.audioContext.close().catch(()=>{}),this.audioContext=null)}}stop(){this._isPlaying&&(this._isPlaying=!1,this.oscillators.forEach(t=>{try{t.stop(),t.disconnect()}catch{}}),this.gainNodes.forEach(t=>t.disconnect()),this.oscillators=[],this.gainNodes=[],this.audioContext&&this.audioContext.state!=="closed"&&(this.audioContext.close().catch(console.error),this.audioContext=null))}set cycleDuration(t){this._cycleDuration=Math.max(.1,t)}set volume(t){if(this._volume=Math.max(0,Math.min(1,t)),this._isPlaying&&this.audioContext){const e=this.audioContext.currentTime;this.gainNodes.forEach(s=>{s.gain.setValueAtTime(this._volume*this.getCurrentGainForOscillator(),e)})}}get isPlaying(){return this._isPlaying}createOscillators(){if(!this.audioContext)return;const t=this.audioContext.currentTime;for(let e=0;e<this.numOscillators;e++){const s=this.audioContext.createOscillator(),i=this.audioContext.createGain();s.type=this.oscillatorType,s.connect(i),i.connect(this.audioContext.destination);const a=this.baseFrequency*Math.pow(2,e);s.frequency.setValueAtTime(a,t);const h=this.calculateGain(e,0);i.gain.setValueAtTime(h*this._volume,t),s.start(t),this.oscillators.push(s),this.gainNodes.push(i)}}calculateGain(t,e){const s=(t-e+this.numOscillators)%this.numOscillators,i=(this.numOscillators-1)/2;return Math.exp(-Math.pow(s-i,2)/(2*1))}getCurrentGainForOscillator(){return 1}schedule(){if(!this._isPlaying||!this.audioContext)return;const e=this.audioContext.currentTime+this.SCHEDULE_AHEAD_TIME;for(;this.nextScheduleTime<e;){const i=(this.nextScheduleTime-this.startTime)%this._cycleDuration/this._cycleDuration;this.oscillators.forEach((a,h)=>{const u=this.baseFrequency*Math.pow(2,h)*Math.pow(2,i);this.nextScheduleTime===this.startTime?a.frequency.setValueAtTime(u,this.nextScheduleTime):a.frequency.exponentialRampToValueAtTime(u,this.nextScheduleTime);const m=this.calculateGain(h,i*this.numOscillators)*this._volume;this.gainNodes[h].gain.setValueAtTime(m,this.nextScheduleTime)}),this.nextScheduleTime+=.02}setTimeout(()=>this.schedule(),80)}dispose(){this.stop()}}class I extends X{_direction="ascending";constructor(t={}){super(t),this._direction=t.direction??"ascending"}set direction(t){this._direction=t}get direction(){return this._direction}toggleDirection(){this._direction=this._direction==="ascending"?"descending":"ascending"}schedule(){if(!this._isPlaying||!this.audioContext)return;const e=this.audioContext.currentTime+this.SCHEDULE_AHEAD_TIME;for(;this.nextScheduleTime<e;){let i=(this.nextScheduleTime-this.startTime)%this._cycleDuration/this._cycleDuration;this._direction==="descending"&&(i=1-i),this.oscillators.forEach((a,h)=>{const o=this.baseFrequency*Math.pow(2,h),u=this._direction==="ascending"?o*Math.pow(2,i):o/Math.pow(2,i);this.nextScheduleTime===this.startTime?a.frequency.setValueAtTime(u,this.nextScheduleTime):a.frequency.exponentialRampToValueAtTime(u,this.nextScheduleTime);const m=this.calculateGain(h,i*this.numOscillators)*this._volume;this.gainNodes[h].gain.setValueAtTime(m,this.nextScheduleTime)}),this.nextScheduleTime+=.02}setTimeout(()=>this.schedule(),80)}}const S={butterfly:0,grasshopper:0,frog:0,bird:0,mouse:0};class n{sound;game={levelName:"default",SPEED:.5,successHeightModifier:1.3,get updateTime(){return Math.floor(17/this.SPEED)},action:null,ctx:null,definingTrajectory:!1,timer:0,movementSpeed:6,runAwaySpeed:6,successHeight:r.defaultTargetHeight,success:!1,fullJump:!0,paused:!1,combo:0,score:0,caught:{...S}};cat={source:{},jumpHeight:r.jumpHeightMin,jumpStage:0,trajectoryDirection:1,CatX:r.defaultCatX,CatY:r.defaultCatY,atPosition:!1};target={nameCurr:"none",nameLast:"none",xCurr:this.cat.CatX+c.width/2,yCurr:r.defaultTargetY,xLast:r.defaultTargetX,yLast:r.defaultTargetY,PositionX:r.defaultTargetX,heightCurr:r.defaultTargetHeight,heightLast:r.defaultTargetHeight,isBarrier:!1,runAwayDelay:r.defaultRunAwayDelay,atPosition:!1};resource;draw;tone;fly;events;tooltip;backdrop;meterStack=new k;handlePause;showLevel;showCombo;showTooltip;updateScore;updateCaught;resetCaught;static __instance;constructor(t,e){this.handlePause=e.handlePause,this.showLevel=e.setLevel,this.showCombo=e.setCombo,this.showTooltip=e.showTooltip,this.updateScore=e.updateScore,this.updateCaught=e.updateCaught,this.resetCaught=e.resetCaught,this.sound=new _,this.tone=new I({baseFrequency:220,numOscillators:2,cycleDuration:6,oscillatorType:"sine",volume:.1,direction:"ascending"}),this.game.ctx=t,this.game.successHeight=r.defaultTargetHeight*this.game.successHeightModifier,this.draw=new y(this.game.ctx),this.fly=new C(this.game.ctx),this.backdrop=new l({ctx:t}),this.events=new d({game:this.game,prepareJumpStart:this.prepareJumpStart,prepareJumpEnd:this.prepareJumpEnd,pause:this.pause}),this.tooltip=new g(this.showTooltip),this.resource=x.get(),this.cat.source=this.resource.sprite.cat}setScore=(t,e=1)=>{const s=Math.max(this.game.combo,1);this.game.score+=t*e*s,this.game.score<0&&(this.game.score=0),this.updateScore(this.game.score),t!=0&&this.fly.throw(t*s,e,this.cat.CatX),this.game.success&&this.tooltip.hide()};commitFail=t=>{this.tooltip.show(t||(this.target.isBarrier?"barrier":"animal")),this.target.isBarrier&&this.sound.use("impact"),this.game.combo=0,this.showCombo(this.game.combo),this.game.success=!1,t!="timeout"&&(this.game.action="return"),this.setScore(T[this.target.nameCurr].fail),this.target.isBarrier||this.levelPrepare()};commitSuccess=()=>{const t=this.target.atPosition?1:2;if(this.setScore(T[this.target.nameCurr].success,t),!this.target.isBarrier){this.game.combo<5&&(this.game.combo+=1,this.game.combo>1&&(this.showCombo(this.game.combo),this.fly.throw("Combo:",this.game.combo,this.cat.CatX),this.sound.use("combo")));const e=this.target.nameCurr;this.updateCaught(e),this.sound.use("catch"),this.target.nameCurr="none"}this.levelPrepare()};prepareJumpStart=()=>{this.sound.sound.muted||(this.tone.direction="ascending",this.tone.start()),this.cat.jumpHeight=r.jumpHeightMin,this.cat.trajectoryDirection=1,this.game.definingTrajectory=!0,this.updateIsNeeded()||requestAnimationFrame(this.update)};prepareJumpEnd=()=>{this.tone.stop(),this.game.definingTrajectory=!1,this.cat.jumpHeight>r.jumpHeightMin+r.trajectoryStep*2&&(this.sound.use("jump"),this.game.action="jump",this.cat.atPosition=!1,this.cat.jumpStage=-Math.PI,this.game.successHeight=this.target.isBarrier?Math.floor(this.target.heightCurr*this.game.successHeightModifier+(this.target.xCurr-this.target.PositionX)/2):Math.floor((this.target.xCurr-this.cat.CatX)/2),this.game.success=this.target.isBarrier&&this.cat.jumpHeight>this.game.successHeight||Math.abs(this.cat.jumpHeight-this.game.successHeight)<r.catchRange)};defineTrajectory=()=>{if(this.cat.jumpHeight+=r.trajectoryStep*this.cat.trajectoryDirection,this.cat.jumpHeight>=r.jumpHeightMax&&(this.cat.trajectoryDirection=-1,this.tone.direction="descending"),this.cat.jumpHeight<r.jumpHeightMin){this.game.action="stay",this.game.definingTrajectory=!1,this.cat.jumpStage=-Math.PI,this.tone.stop();return}this.draw.drawTrajectory(this.cat.CatX,this.cat.CatY,this.cat.jumpHeight,!this.target.isBarrier)};defineJump=()=>{const t=this.target.isBarrier?1:.5,e=this.cat.jumpHeight,s=e/4,i=Math.PI/s/t;this.cat.jumpStage+=i;const a=this.cat.jumpStage;if(!this.game.fullJump&&!this.game.success&&a>-Math.PI/2&&this.commitFail(),a<0){this.cat.CatX=Math.floor(r.defaultCatX+e+e*Math.cos(a));const h=this.cat.CatY+e*Math.sin(a)*t,o=Math.floor((a+Math.PI)/Math.PI*7);this.draw.drawCat(this.cat.source.frames[o].image,this.cat.CatX,h)}else this.game.success?this.commitSuccess():this.commitFail()};sceneChange=()=>{this.target.nameLast!="none"&&(this.runAway(),this.draw.drawTarget(this.target.nameLast,this.target.xLast,this.target.yLast,this.target.heightLast,!this.game.success),(this.target.xLast<0||this.target.xLast>c.width)&&(this.target.nameLast="none")),this.target.xCurr-=this.cat.atPosition?this.game.movementSpeed:Math.floor(this.game.movementSpeed/2*3),this.target.xCurr<this.target.PositionX&&(this.target.xCurr=this.target.PositionX,this.target.atPosition=!0,this.target.isBarrier||(this.game.timer=window.setTimeout(()=>this.commitFail("timeout"),this.target.runAwayDelay))),this.cat.CatX>r.defaultCatX?this.cat.CatX-=this.target.atPosition?Math.floor(this.game.movementSpeed/3*2):this.game.movementSpeed:this.cat.atPosition=!0,this.cat.atPosition&&this.target.atPosition&&setTimeout(()=>this.game.action="stay",0)};runAway=()=>{if(this.target.nameLast=="butterfly"||this.target.nameLast=="bird"){this.target.xLast-=this.game.runAwaySpeed,this.target.yLast-=this.target.nameLast=="butterfly"?Math.random()*6:4;return}if(this.target.nameLast=="grasshopper"){this.target.xLast-=this.game.runAwaySpeed;return}if(this.target.nameLast=="mouse"){this.target.xLast+=this.game.runAwaySpeed;return}this.target.xLast-=this.cat.atPosition?this.game.movementSpeed:Math.floor(this.game.movementSpeed/2*3)};render=()=>{switch(this.cat.source||(this.cat.source=this.resource.sprite.cat),performance.mark("beginRenderProcess"),this.game.ctx.clearRect(0,0,c.width,c.height),!this.target.atPosition&&(this.game.action=="return"||this.game.action=="scene")?this.backdrop.move(this.cat.atPosition?this.game.movementSpeed:Math.floor(this.game.movementSpeed/2*3)):this.backdrop.draw(),this.draw.drawTarget(this.target.nameCurr,this.target.xCurr,this.target.yCurr,this.target.heightCurr),this.game.definingTrajectory&&this.defineTrajectory(),this.game.action){case"return":this.sceneChange(),this.draw.drawCat(this.cat.source.image,this.cat.CatX,this.cat.CatY);break;case"scene":this.sceneChange(),this.draw.drawCat(this.cat.source.image,this.cat.CatX,this.cat.CatY);break;case"run":this.draw.drawCat(this.cat.source.image,this.cat.CatX,this.cat.CatY);break;case"jump":this.defineJump();break;default:this.draw.drawCat(this.cat.source.frames[0].image,this.cat.CatX,this.cat.CatY)}this.fly.render(),(this.game.definingTrajectory||this.updateIsNeeded())&&setTimeout(this.update,this.game.updateTime),performance.mark("endRenderProcess");{const t=performance.measure("measureRenderProcess","beginRenderProcess","endRenderProcess"),e=Math.floor(t.duration*1e3);e>0&&this.meterStack.enqueue(e);const s=Math.floor(1e4/this.meterStack.average(10));this.game.ctx.fillStyle="#cedbf0",this.game.ctx.fillText(`fps: ${s}`,580,18)}};updateIsNeeded=()=>this.game.action!==null&&this.game.action!=="stay";update=()=>{!this.game.paused&&this.game.ctx&&(this.resource.sprite.cat&&!this.resource.sprite.cat.loading?this.render():(console.log("Waiting for GIF image"),setTimeout(this.update,500)))};levelPrepare=()=>{window.clearTimeout(this.game.timer);const t=Math.min(Math.floor(Math.max(this.game.score,0)/r.scorePerLevel),5);this.showLevel(t),this.game.SPEED=.5+t*.1;const e=M[this.game.levelName],s=Math.floor(Math.random()*e.length);this.target.nameLast=this.target.nameCurr,this.target.heightLast=this.target.heightCurr,this.target.xLast=this.target.xCurr,this.target.yLast=this.target.yCurr,this.target.xCurr=Math.floor(Math.max(this.cat.CatX+c.width/2,c.width)),this.target.yCurr=r.defaultTargetY,this.target.nameCurr=e[s],this.target.isBarrier=L.includes(this.target.nameCurr),this.target.PositionX=this.target.isBarrier?r.defaultTargetX:r.defaultTargetX+Math.floor(Math.random()*r.animalPositionDelta),this.target.heightCurr=this.target.isBarrier?r.defaultTargetHeight+r.stepTargetHeight*t:r.defaultTargetHeight,this.target.runAwayDelay=r.defaultRunAwayDelay-r.stepTargetDelay*t,this.game.paused=!1,this.game.movementSpeed=6,this.game.fullJump=this.target.nameCurr=="puddle"||A.includes(this.target.nameCurr),this.cat.atPosition=!1,this.target.atPosition=!1,this.updateIsNeeded()||requestAnimationFrame(this.update),this.game.action="scene"};start(t={}){const{levelName:e=this.game.levelName,restart:s}=t;this.draw=new y(this.game.ctx),this.fly=new C(this.game.ctx),this.events=new d({game:this.game,prepareJumpStart:this.prepareJumpStart,prepareJumpEnd:this.prepareJumpEnd,pause:this.pause}),this.tooltip=new g(this.showTooltip),this.backdrop.init(e),this.sound.play(0,!0),this.game.ctx.font="20px Arial",this.game.levelName=e,this.game.paused=!1,this.game.action=null,this.events.registerEvents(),this.levelPrepare(),this.tooltip.show("start"),this.game.combo=0,this.showCombo(this.game.combo),s&&(console.log("Game restarted"),this.game.score=0,this.game.caught={...S},this.updateScore(this.game.score),this.resetCaught())}stop(){this.events.unRegisterEvents(),window.clearTimeout(this.game.timer),this.sound.pause()}pause=t=>{this.game.paused!=t&&(this.game.paused=t,console.log(`Game ${this.game.paused?"paused":"continued"}`),this.game.paused?(this.events.unRegisterEvents(),this.handlePause(!0),window.clearTimeout(this.game.timer)):(this.events.registerEvents(),requestAnimationFrame(this.update)))};static get({ctx:t,handlers:e}){return n.__instance?(e&&(n.__instance.handlePause=e.handlePause,n.__instance.showLevel=e.setLevel,n.__instance.showCombo=e.setCombo,n.__instance.showTooltip=e.showTooltip,n.__instance.updateScore=e.updateScore,n.__instance.updateCaught=e.updateCaught,n.__instance.resetCaught=e.resetCaught),n.__instance):(t&&e&&(n.__instance=new n(t,e)),n.__instance)}}export{n as Engine};
